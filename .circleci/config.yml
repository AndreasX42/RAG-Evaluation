version: 2.1

executors:
  python-docker-executor:
    docker:
      - image: cimg/python:3.11

jobs:
  # run integration tests
  run_integration_tests:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      #- run:
      #    name: Setup VirtualEnv
      #    command: |
      #      virtualenv venv
      #      . venv/bin/activate
      #      pip install --no-cache-dir -r ./tests/requirements.txt
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Run Docker Compose to build, start and test
          command: docker-compose -f docker-compose-test.yaml up --exit-code-from test-suite --build
      - run:
          name: Shut services down
          command: docker-compose -f docker-compose-test.yaml down
      - store_artifacts:
          path: /tests/test-reports
          destination: test-reports
  # push images to docker hub
  push_app_image:
    executor: python-docker-executor
    steps:
      - checkout
      - set_env_vars
      - docker_login
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Push app image
          command: |
            docker build -t $DOCKER_USER/$IMAGE_NAME_BASE-app:$TAG ./app
            docker push $DOCKER_USER/$IMAGE_NAME_BASE-app:$TAG
  push_backend_image:
    executor: python-docker-executor
    steps:
      - checkout
      - set_env_vars
      - docker_login
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Push backend image
          command: |
            docker build -t $DOCKER_USER/$IMAGE_NAME_BASE-backend:$TAG ./backend
            docker push $DOCKER_USER/$IMAGE_NAME_BASE-backend:$TAG
  push_vectorstore_image:
    executor: python-docker-executor
    steps:
      - checkout
      - set_env_vars
      - docker_login
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Push vectorstore image
          command: |
            docker build -t $DOCKER_USER/$IMAGE_NAME_BASE-vectorstore:$TAG ./vectorstore
            docker push $DOCKER_USER/$IMAGE_NAME_BASE-vectorstore:$TAG

# define workflow of pipeline
workflows:
  version: 2
  build-deploy:
    jobs:
      - run_integration_tests
      - push_app_image:
          requires:
            - run_integration_tests
      - push_backend_image:
          requires:
            - run_integration_tests
      - push_vectorstore_image:
          requires:
            - run_integration_tests

# helper commands
commands:
  set_env_vars:
    steps:
      - run:
          name: Setup tag and base image name
          command: |
            echo 'export TAG=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME_BASE=ragflow' >> $BASH_ENV

  docker_login:
    steps:
      - run:
          name: Login into Docker Hub
          command: |
            echo $DOCKER_PWD | docker login --username $DOCKER_USER --password-stdin
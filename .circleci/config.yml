version: 2.1

executors:
  python-docker-executor:
    docker:
      - image: cimg/python:3.11

jobs:
  run_integration_tests:
    docker:
      - image: cimg/python:3.11
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --no-cache-dir -r ./tests/requirements.txt
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Run Docker Compose to build and start
          command: docker-compose -f docker-compose-test.yaml up --build --detach
      - run:
          name: Shut services down
          command: docker-compose -f docker-compose-test.yaml down
      - store_artifacts:
          path: /tests/test-reports
          destination: test-reports
  build_and_push_to_docker_hub:
    executor: python-docker-executor
    steps:
      - checkout
      - run:
          name: Setup VirtualEnv
          command: |
            echo 'export TAG=${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME_BASE=ragflow' >> $BASH_ENV 
            virtualenv venv
            . venv/bin/activate
            pip install --no-cache-dir -r ./app/requirements.txt
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build and push to Docker Hub
          command: |
            . venv/bin/activate

            docker build -t $DOCKER_USER/$IMAGE_NAME_BASE-app:$TAG ./app
            docker build -t $DOCKER_USER/$IMAGE_NAME_BASE-backend:$TAG ./backend
            docker build -t $DOCKER_USER/$IMAGE_NAME_BASE-vectorstore:$TAG ./vectorstore

            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin

            docker push $DOCKER_USER/$IMAGE_NAME_BASE-app:$TAG
            docker push $DOCKER_USER/$IMAGE_NAME_BASE-backend:$TAG
            docker push $DOCKER_USER/$IMAGE_NAME_BASE-vectorstore:$TAG

workflows:
  version: 2
  build-deploy:
    jobs:
      - run_integration_tests
      - build_and_push_to_docker_hub
